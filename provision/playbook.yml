- name: Deploy Redmine
  hosts: all
  roles:
    - role: common
    - role: mariadb
    - role: nodejs
    - role: tools
  tasks:
    - name: install ruby
      ansible.builtin.import_role:
        name: redmine
        tasks_from: ruby
    - name: redmine database setting
      ansible.builtin.import_role:
        name: redmine
        tasks_from: database
    - name: setup
      block:
        - name: create Gemfile.local file
          ansible.builtin.copy:
            src: Gemfile.local
            dest: /vagrant/redmine/Gemfile.local
            mode: "0644"
        - name: set redmine database config variable
          ansible.builtin.set_fact:
            redmine_db_cfg:
              production: "{{ redmine_db_cfg.production }}"
              development: "{{ redmine_db_cfg.production }}"
        - name: create database config file
          ansible.builtin.template:
            src: database.yml.j2
            dest: "{{ redmine_home }}/config/database.yml"
            mode: "0644"
        - name: create Redmine config file
          ansible.builtin.template:
            src: configuration.yml.j2
            dest: "{{ redmine_home }}/config/configuration.yml"
            mode: "0644"
        - name: execute bundle update
          ansible.builtin.command: bundle update
          args:
            chdir: "{{ redmine_home }}"
          tags:
            - skip_ansible_lint
        - name: execute bundle install
          command: bundle install
          args:
            chdir: "{{ redmine_home }}"
          tags:
            - skip_ansible_lint
        - name: create secret token
          ansible.builtin.command: bundle exec rake generate_secret_token
          args:
            chdir: "{{ redmine_home }}"
            creates: "{{ redmine_home }}/config/initializers/secret_token.rb"
          register: generate_token_result
        - name: execute bundle exec rake db:migrate
          ansible.builtin.command: bundle exec rake db:migrate
          args:
            chdir: "{{ redmine_home }}"
          tags:
            - skip_ansible_lint
        - name: execute bundle exec rake redmine:plugins:migrate
          ansible.builtin.command: bundle exec rake redmine:plugins:migrate
          args:
            chdir: "{{ redmine_home }}"
          tags:
            - skip_ansible_lint
        - name: load default data
          ansible.builtin.command: bundle exec rake redmine:load_default_data
          args:
            chdir: "{{ redmine_home }}"
          when: generate_token_result is changed
      become: true
      become_user: "{{ redmine_user }}"
      environment:
        RAILS_ENV: "{{ redmine_mode }}"
        REDMINE_LANG: "{{ redmine_lang }}"
    - name: set user config
      block:
        - name: set user git config
          git_config:
            name: "{{ item.name }}"
            scope: global
            value: "{{ item.value }}"
          loop: "{{ user_git_config | default([])  }}"
        - name: set variables
          ansible.builtin.set_fact:
            redmine_db_host: "{{ redmine_db_cfg.development.host }}"
            redmine_db_name: "{{ redmine_db_cfg.development.database }}"
            redmine_db_user: "{{ redmine_db_cfg.development.username }}"
            redmine_db_password: "{{ redmine_db_cfg.development.password }}"
            db_character_set: "{{ mariadb_databases[0].encoding | default(mariadb_default_charset | default('utf8mb4')) }}"
        - name: set enviromnet variables(TBLS_DSN)
          ansible.builtin.lineinfile:
            path: ~/.bashrc
            regexp: '^export TBLS_DSN='
            line: export TBLS_DSN=my://{{ redmine_db_user }}:{{ redmine_db_password }}@{{ redmine_db_host }}:3306/{{ redmine_db_name }}
        - name: set enviromnet variables(TBLS_DOC_PATH)
          ansible.builtin.lineinfile:
            path: ~/.bashrc
            regexp: '^export TBLS_DOC_PATH='
            line: export TBLS_DOC_PATH=/vagrant/dbdoc
        - name: copy tbls setting
          ansible.builtin.copy:
            src: tbls.yml
            dest: ~/tbls.yml
            mode: "0644"
        - name: create mysql connection file
          ini_file:
            path: ~/.my.cnf
            create: true
            section: client
            option: "{{ item.key | replace('_', '-') }}"
            value: "{{ item.value | string }}"
            mode: "0640"
          with_dict:
            host: "{{ redmine_db_host }}"
            database: "{{ redmine_db_name }}"
            user: "{{ redmine_db_user }}"
            password: "{{ redmine_db_password }}"
            default_character_set: "{{ db_character_set }}"
        - name: create user script directory
          ansible.builtin.file:
            path: ~/bin
            state: directory
            mode: "0755"
        - name: copy user scripts
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: ~/bin/{{ item | basename }}
            mode: "0755"
          loop: "{{ lookup('fileglob', 'files/scripts/*', wantlist=True) }}"
      become: false
    - name: create MariaDB users
      mysql_user:
        name: "{{ redmine_db_user }}"
        password: "{{ redmine_db_password }}"
        host: "%"
        priv: "{{ redmine_db_name }}.*:ALL"
        login_unix_socket: "{{ mariadb_unix_socket_path }}"
      no_log: true
    - name: allow firewall port
      ufw:
        rule: allow
        port: "{{ item | string }}"
      loop:
        # Rails Server
        - 3000
        # MariaDB Server
        - 3306
        # Ruby Remote Debug
        - 1234
        # Mailhog
        - 8025
